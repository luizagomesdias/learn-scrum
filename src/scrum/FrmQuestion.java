package scrum;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.dao.QuestionDao;
import model.entity.EasyQuestion;
import model.entity.HardQuestion;
import model.entity.Question;
import model.entity.QuestionLevel;

/**
 *
 * @author Luiza
 */
public class FrmQuestion extends javax.swing.JInternalFrame {

    private List<Question> questions = new ArrayList<>();
    private final QuestionDao questionDao = new QuestionDao();
    private DefaultTableModel qTable;

    public FrmQuestion() {       
        //Inicializa os components do swing
        initComponents();

        //Carrega as questões do arquivo
        loadQuestions();

        //Cria um listener para ouvir os eventos da tabela  
        tblQuestions.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            int lastSelectedRow = -1;

            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblQuestions.getSelectedRow();
                if (selectedRow >= 0 && selectedRow != lastSelectedRow) {
                    Question question = questions.get(selectedRow);

                    lblId.setText(question.getId());
                    txtQuestion.setText(question.getQuestion());
                    txtOptionA.setText(question.getAnswers().get("A"));
                    txtOptionB.setText(question.getAnswers().get("B"));
                    txtOptionC.setText(question.getAnswers().get("C"));
                    txtOptionD.setText(question.getAnswers().get("D"));
                    cmbCorrectAnswer.setSelectedItem(question.getCorrectAnswer());
                    cmbLevel.setSelectedItem(question.getLevel().getLevelUI());
                }
                if (lastSelectedRow != selectedRow) {
                    lastSelectedRow = selectedRow;
                }
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIdQuestao = new javax.swing.JLabel();
        lblQuestao = new javax.swing.JLabel();
        lblOpcaoA = new javax.swing.JLabel();
        lblOpcaoC = new javax.swing.JLabel();
        txtQuestion = new javax.swing.JTextField();
        txtOptionA = new javax.swing.JTextField();
        btnLast = new javax.swing.JButton();
        lblOpcaoB = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuestions = new javax.swing.JTable();
        lblOpcaoD = new javax.swing.JLabel();
        txtOptionD = new javax.swing.JTextField();
        txtOptionB = new javax.swing.JTextField();
        txtOptionC = new javax.swing.JTextField();
        lblAnswer = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        cmbCorrectAnswer = new javax.swing.JComboBox<>();
        cmbLevel = new javax.swing.JComboBox<>();
        lblLevel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(50, 50, 50));
        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro Questões");
        setPreferredSize(new java.awt.Dimension(757, 612));

        lblIdQuestao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblIdQuestao.setForeground(new java.awt.Color(185, 185, 185));
        lblIdQuestao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblIdQuestao.setText("ID:");
        lblIdQuestao.setToolTipText("");

        lblQuestao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQuestao.setForeground(new java.awt.Color(185, 185, 185));
        lblQuestao.setText("Questão:");
        lblQuestao.setToolTipText("");

        lblOpcaoA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblOpcaoA.setForeground(new java.awt.Color(185, 185, 185));
        lblOpcaoA.setText("Opção A:");

        lblOpcaoC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblOpcaoC.setForeground(new java.awt.Color(185, 185, 185));
        lblOpcaoC.setText("Opção C:");
        lblOpcaoC.setMaximumSize(new java.awt.Dimension(55, 15));
        lblOpcaoC.setMinimumSize(new java.awt.Dimension(55, 15));
        lblOpcaoC.setPreferredSize(new java.awt.Dimension(55, 15));

        txtQuestion.setBackground(new java.awt.Color(85, 85, 85));
        txtQuestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtQuestion.setForeground(new java.awt.Color(177, 235, 75));
        txtQuestion.setBorder(null);
        txtQuestion.setCaretColor(new java.awt.Color(177, 235, 75));
        txtQuestion.setEnabled(false);

        txtOptionA.setBackground(new java.awt.Color(85, 85, 85));
        txtOptionA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtOptionA.setForeground(new java.awt.Color(177, 235, 75));
        txtOptionA.setBorder(null);
        txtOptionA.setCaretColor(new java.awt.Color(177, 235, 75));
        txtOptionA.setEnabled(false);

        btnLast.setBackground(new java.awt.Color(50, 50, 50));
        btnLast.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-final-file.png"))); // NOI18N
        btnLast.setToolTipText("Fim");
        btnLast.setBorder(null);
        btnLast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        lblOpcaoB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblOpcaoB.setForeground(new java.awt.Color(185, 185, 185));
        lblOpcaoB.setText("Opção B:");
        lblOpcaoB.setMaximumSize(new java.awt.Dimension(55, 15));
        lblOpcaoB.setMinimumSize(new java.awt.Dimension(55, 15));
        lblOpcaoB.setPreferredSize(new java.awt.Dimension(55, 15));

        btnPrevious.setBackground(new java.awt.Color(50, 50, 50));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(240, 240, 240));
        btnPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-up-file.png"))); // NOI18N
        btnPrevious.setToolTipText("Voltar");
        btnPrevious.setBorder(null);
        btnPrevious.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(50, 50, 50));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-down-file.png"))); // NOI18N
        btnNext.setToolTipText("Próximo");
        btnNext.setBorder(null);
        btnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnFirst.setBackground(new java.awt.Color(50, 50, 50));
        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnFirst.setForeground(new java.awt.Color(240, 240, 240));
        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-beg-file.png"))); // NOI18N
        btnFirst.setToolTipText("Início");
        btnFirst.setBorder(null);
        btnFirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(50, 50, 50));
        btnNew.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-add-file.png"))); // NOI18N
        btnNew.setToolTipText("Novo");
        btnNew.setBorder(null);
        btnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(50, 50, 50));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-save-file.png"))); // NOI18N
        btnSave.setToolTipText("Salvar");
        btnSave.setBorder(null);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(50, 50, 50));
        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-edit-file.png"))); // NOI18N
        btnEdit.setToolTipText("Editar");
        btnEdit.setBorder(null);
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(50, 50, 50));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-del-file.png"))); // NOI18N
        btnDelete.setToolTipText("Excluir");
        btnDelete.setBorder(null);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(50, 50, 50));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-cancel-file.png"))); // NOI18N
        btnCancel.setToolTipText("Cancelar");
        btnCancel.setBorder(null);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(50, 50, 50));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img-search-file.png"))); // NOI18N
        btnSearch.setToolTipText("Pesquisar");
        btnSearch.setBorder(null);
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(85, 85, 85));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(185, 185, 185));

        tblQuestions.setBackground(new java.awt.Color(85, 85, 85));
        tblQuestions.setForeground(new java.awt.Color(185, 185, 185));
        tblQuestions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQuestions.setOpaque(false);
        jScrollPane1.setViewportView(tblQuestions);

        lblOpcaoD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblOpcaoD.setForeground(new java.awt.Color(185, 185, 185));
        lblOpcaoD.setText("Opção D:");

        txtOptionD.setBackground(new java.awt.Color(85, 85, 85));
        txtOptionD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtOptionD.setForeground(new java.awt.Color(177, 235, 75));
        txtOptionD.setBorder(null);
        txtOptionD.setCaretColor(new java.awt.Color(177, 235, 75));
        txtOptionD.setEnabled(false);

        txtOptionB.setBackground(new java.awt.Color(85, 85, 85));
        txtOptionB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtOptionB.setForeground(new java.awt.Color(177, 235, 75));
        txtOptionB.setBorder(null);
        txtOptionB.setCaretColor(new java.awt.Color(177, 235, 75));
        txtOptionB.setEnabled(false);

        txtOptionC.setBackground(new java.awt.Color(85, 85, 85));
        txtOptionC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtOptionC.setForeground(new java.awt.Color(177, 235, 75));
        txtOptionC.setBorder(null);
        txtOptionC.setCaretColor(new java.awt.Color(177, 235, 75));
        txtOptionC.setEnabled(false);

        lblAnswer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAnswer.setForeground(new java.awt.Color(185, 185, 185));
        lblAnswer.setText("Resposta:");
        lblAnswer.setToolTipText("");

        lblId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblId.setForeground(new java.awt.Color(177, 235, 75));

        cmbCorrectAnswer.setBackground(new java.awt.Color(85, 85, 85));
        cmbCorrectAnswer.setForeground(new java.awt.Color(185, 185, 185));
        cmbCorrectAnswer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a opção:", "A", "B", "C", "D" }));
        cmbCorrectAnswer.setBorder(null);
        cmbCorrectAnswer.setEnabled(false);

        cmbLevel.setBackground(new java.awt.Color(85, 85, 85));
        cmbLevel.setForeground(new java.awt.Color(185, 185, 185));
        cmbLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a opção:", "Fácil", "Difícil" }));
        cmbLevel.setBorder(null);
        cmbLevel.setEnabled(false);

        lblLevel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLevel.setForeground(new java.awt.Color(185, 185, 185));
        lblLevel.setText("Nível:");
        lblLevel.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCorrectAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuestao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblOpcaoA))
                            .addComponent(lblOpcaoD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblOpcaoB, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(lblOpcaoC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblIdQuestao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtOptionC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOptionB, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtOptionA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                                    .addComponent(txtQuestion, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(txtOptionD, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(163, 163, 163))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdQuestao, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(lblQuestao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOptionA, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOpcaoA, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOptionB, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lblOpcaoB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOptionC, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOpcaoC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOptionD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOpcaoD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbCorrectAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnFirst, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPrevious, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        //Atualizar botões
        btnFirst.setEnabled(false);
        btnPrevious.setEnabled(false);
        btnNext.setEnabled(false);
        btnLast.setEnabled(false);
        btnNew.setEnabled(false);
        btnEdit.setEnabled(false);
        btnSave.setEnabled(true);
        btnDelete.setEnabled(false);
        btnCancel.setEnabled(true);
        btnSearch.setEnabled(false);
        //Habilitar caixas de textos
        enableForm();
        //Limpar caixas de textos
        clearForm();
        //Colocar o foco no início
        txtQuestion.requestFocus();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //Valida se os campos do formulário foram preenchidos
        if (txtQuestion.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor inserir a questão");
            txtQuestion.requestFocusInWindow();
            return;
        }
        if (txtOptionA.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor inserir a opção A");
            txtOptionA.requestFocusInWindow();
            return;
        }
        if (txtOptionB.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor inserir a opção B");
            txtOptionB.requestFocusInWindow();
            return;
        }
        if (txtOptionC.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor inserir a opção C");
            txtOptionC.requestFocusInWindow();
            return;
        }
        if (txtOptionD.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor inserir a opção D");
            txtOptionD.requestFocusInWindow();
            return;
        }
        if (cmbCorrectAnswer.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione a resposta correta");
            cmbCorrectAnswer.requestFocusInWindow();
            return;
        }
        if (cmbLevel.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o nível da questão");
            cmbLevel.requestFocusInWindow();
            return;
        }

        //O ID determina se é uma nova questão ou se é uma edição
        String id = lblId.getText();

        //Preenche o objeto para salvar no arquivo
        Question question;
        QuestionLevel selectedLevel = QuestionLevel
                .fromUI(cmbLevel.getSelectedItem().toString());

        if (QuestionLevel.EASY.equals(selectedLevel)) {
            question = new EasyQuestion();
        } else if (QuestionLevel.HARD.equals(selectedLevel)) {
            question = new HardQuestion();
        } else {
            question = new Question();
        }

        question.setId(id);
        question.setQuestion(txtQuestion.getText());

        Map<String, String> answers = new HashMap<>();
        answers.put("A", txtOptionA.getText());
        answers.put("B", txtOptionB.getText());
        answers.put("C", txtOptionC.getText());
        answers.put("D", txtOptionD.getText());
        question.setAnswers(answers);

        question.setCorrectAnswer(cmbCorrectAnswer.getSelectedItem().toString());

        question.setLevel(selectedLevel);

        question.setPoints(1); // Valor que pode ser alterado

        //Se não tem ID é uma nova questão
        if (id.isEmpty()) {
            id = questionDao.create(question);
        } else {
            questionDao.update(question);
        }
        JOptionPane.showMessageDialog(rootPane, "Questão salva com sucesso - ID: " + id);

        //Recarrega as questões do arquivo
        loadQuestions();

        //Limpa o form e desabilita os campos de texto
        clearForm();
        disableForm();

        //Atualizar botões
        btnFirst.setEnabled(true);
        btnPrevious.setEnabled(true);
        btnNext.setEnabled(true);
        btnLast.setEnabled(true);
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnSave.setEnabled(false);
        btnDelete.setEnabled(true);
        btnCancel.setEnabled(true);
        btnSearch.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //Atualizar botões
        btnFirst.setEnabled(true);
        btnPrevious.setEnabled(true);
        btnNext.setEnabled(true);
        btnLast.setEnabled(true);
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnSave.setEnabled(false);
        btnDelete.setEnabled(true);
        btnCancel.setEnabled(true);
        btnSearch.setEnabled(true);
        //Limpar caixas de textos
        clearForm();
        //Desabilitar caixas de textos
        disableForm();
        //Recarrega as questões do arquivo
        loadQuestions();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        //Atualizar botões
        btnFirst.setEnabled(false);
        btnPrevious.setEnabled(false);
        btnNext.setEnabled(false);
        btnLast.setEnabled(false);
        btnNew.setEnabled(false);
        btnEdit.setEnabled(false);
        btnSave.setEnabled(true);
        btnDelete.setEnabled(false);
        btnCancel.setEnabled(true);
        btnSearch.setEnabled(false);
        //Habilita Caixa de textos
        enableForm();
        txtQuestion.requestFocus();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        //Verifica se a lista está vazia
        if (!questions.isEmpty()) {
            int lastQuestion = questions.size() - 1;
            tblQuestions.setRowSelectionInterval(lastQuestion, lastQuestion);
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String id = lblId.getText();
        if (!id.isEmpty()) {
            int resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente deletar este cadastro?");
            if (resposta != 0) {
                return;
            }
            questionDao.delete(lblId.getText());
            loadQuestions();
            clearForm();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchText = JOptionPane.showInputDialog("Insira o texto:");
        if (searchText.isEmpty()) {
            loadQuestions();
        }
        loadQuestionsByFilter(searchText);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        int selectedRow = tblQuestions.getSelectedRow();
        int lastQuestionIndex = questions.size() - 1;
        if (selectedRow >= 0 && selectedRow < lastQuestionIndex) {
            int nextQuestion = selectedRow + 1;
            tblQuestions.setRowSelectionInterval(nextQuestion, nextQuestion);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        int selectedRow = tblQuestions.getSelectedRow();
        if (selectedRow > 0) {
            int previousQuestion = selectedRow - 1;
            tblQuestions.setRowSelectionInterval(previousQuestion, previousQuestion);
        }
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        //Verifica se a lista está vazia
        if (!questions.isEmpty()) {
            int firstQuestion = 0;
            tblQuestions.setRowSelectionInterval(firstQuestion, firstQuestion);
        }
    }//GEN-LAST:event_btnFirstActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbCorrectAnswer;
    private javax.swing.JComboBox<String> cmbLevel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnswer;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdQuestao;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblOpcaoA;
    private javax.swing.JLabel lblOpcaoB;
    private javax.swing.JLabel lblOpcaoC;
    private javax.swing.JLabel lblOpcaoD;
    private javax.swing.JLabel lblQuestao;
    private javax.swing.JTable tblQuestions;
    private javax.swing.JTextField txtOptionA;
    private javax.swing.JTextField txtOptionB;
    private javax.swing.JTextField txtOptionC;
    private javax.swing.JTextField txtOptionD;
    private javax.swing.JTextField txtQuestion;
    // End of variables declaration//GEN-END:variables

    private void loadQuestions() {
        questions = questionDao.readAll();
        fillTable();
    }

    private void loadQuestionsByFilter(String search) {
        questions = questionDao.readAllByFilter(search);
        fillTable();
    }

    private void fillTable() {
        String titles[] = {"Questão", "Resposta", "Nível"};
        String[] register = new String[3];
        qTable = new DefaultTableModel(null, titles);
        for (Question question : questions) {
            register[0] = question.getQuestion();
            register[1] = question.getCorrectAnswer();
            register[2] = question.getLevel().getLevelUI();
            qTable.addRow(register);
        }
        tblQuestions.setModel(qTable);
    }

    private void clearForm() {
        //Limpa todos os campos do formulário
        lblId.setText("");
        txtQuestion.setText("");
        txtOptionA.setText("");
        txtOptionB.setText("");
        txtOptionC.setText("");
        txtOptionD.setText("");
        cmbCorrectAnswer.setSelectedIndex(0);
        cmbLevel.setSelectedIndex(0);
    }

    private void enableForm() {
        //Habilita os campos do formulário para escrita
        txtQuestion.setEnabled(true);
        txtOptionA.setEnabled(true);
        txtOptionB.setEnabled(true);
        txtOptionC.setEnabled(true);
        txtOptionD.setEnabled(true);
        cmbCorrectAnswer.setEnabled(true);
        cmbLevel.setEnabled(true);

    }

    private void disableForm() {
        //Desabilita os campos do formulário
        txtQuestion.setEnabled(false);
        txtOptionA.setEnabled(false);
        txtOptionB.setEnabled(false);
        txtOptionC.setEnabled(false);
        txtOptionD.setEnabled(false);
        cmbCorrectAnswer.setEnabled(false);
        cmbLevel.setEnabled(false);

    }
}
